Controversy News Aggregation System
A web-based system for aggregating and summarizing controversy news about a specific company within a specified date range. The system uses Google Generative AI to fetch and summarize relevant news and automatically emails the generated news to a designated recipient.

Features
Company-specific News: Retrieve controversy news about a specific company.
Date Range Filtering: Filter news based on user-specified start and end dates.
Interactive User Interface: Easy-to-use form for input and results display.
AI-powered Summarization: Utilizes Google Generative AI for accurate and concise news generation.
Automated Email Feature: Automatically emails the generated news summary to the specified recipient.
Project Structure
bash
Copy code
.
├── public/
│   ├── index.html         # Main HTML file for the frontend
│   ├── style.css          # Styles for the frontend
│   ├── bundle.js          # JavaScript for handling user interactions
├── .env                   # Environment variables file (API keys, etc.)
├── server.js              # Backend server (Node.js + Express)
├── package.json           # Project dependencies and scripts
└── README.md              # Project documentation
Prerequisites
Node.js: Ensure you have Node.js installed on your system.
Google Generative AI Access: You need an API key for Google Generative AI.
Email Service: The system uses a mailing service like Nodemailer. Configure the SMTP settings in the .env file.
Installation
Clone the repository:

bash
Copy code
git clone https://github.com/your-username/controversy-news-aggregator.git
cd controversy-news-aggregator
Install dependencies:

bash
Copy code
npm install
Create a .env file in the root directory and add the following:

plaintext
Copy code
API_KEY=your_google_generative_ai_api_key
EMAIL_SERVICE=smtp.example.com
EMAIL_PORT=587
EMAIL_USER=your-email@example.com
EMAIL_PASS=your-email-password
Usage
Start the server:

bash
Copy code
node server.js
Open your browser and navigate to:

arduino
Copy code
http://localhost:3000
Use the form on the webpage to input:

Company Name: Enter the name of the company.
Start Date: Select the start date for news filtering.
End Date: Select the end date for news filtering.
Email: Provide the recipient's email address.
Click Generate Summary to fetch news and send an email.
Technology Stack
Frontend:
HTML5, CSS3, JavaScript (Vanilla)
Backend:
Node.js
Express.js
Google Generative AI (@google/generative-ai library)
Nodemailer (for email functionality)
API Workflow
User inputs details in the form.
The frontend sends a POST request to /fetch-news with the following payload:
json
Copy code
{
    "companyName": "Example Company",
    "startDate": "YYYY-MM-DD",
    "endDate": "YYYY-MM-DD",
    "email": "recipient@example.com"
}
The server generates a prompt and interacts with Google Generative AI to fetch controversy news.
The news is sent back as a JSON response and displayed on the webpage.
The generated news summary is emailed to the specified recipient using the configured SMTP service.
Error Handling
Displays user-friendly error messages for:
Missing input fields.
Invalid email addresses.
Server errors or failed API calls.
Logs server-side errors for debugging.
Future Enhancements
Add support for multiple AI models for comparison.
Implement advanced filtering options (e.g., sentiment analysis, news categories).
Enhance UI for better responsiveness and aesthetics.
Add email templates for a more professional appearance.
Contributing
Contributions are welcome! Please feel free to submit issues or pull requests.

License
This project is licensed under the MIT License. See the LICENSE file for details.